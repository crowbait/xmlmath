print_help () {
  echo "XMLMath v1.0.0"
  echo "c Crowbait | Licensed under GPLv3"
  echo ""
  echo "Usage: $0 <target-mode> <operation-mode> [<modifier>] [options] <targets...>"
  echo ""
  echo "Target Modes:"
  echo "  attr        Modify XML attributes:     <tag attr=\"2\" />"
  echo "  value       Modify XML element values: <tag>2</tag>"
  echo ""
  echo "Operation Modes:"
  echo "  add       | a     Add modifier"
  echo "  subtract  | s     Subtract modifier"
  echo "  multiply  | m     Multiply by modifier"
  echo "  divide    | d     Divide by modifier"
  echo "  set       | s     Set to specified value"
  echo ""
  echo "Options:"
  echo "  --file <file>  | -f <file>  Input file (optional, stdin if not specified, stdout is file path)"
  echo "  --inplace      | -p         Modify the file in place (requires --file, stdout if not specified)"
  echo "  --int          | -i         Round results to nearest integer"
  echo "  --min <val>                 Clamp values to this minimum"
  echo "  --max <val>                 Clamp values to this maximum"
  echo "  --regex        | -r         Treat targets names (value elements or attributes) as regex patterns - use single quotes!"
  echo "  --within <tag> | -w <tag>   Only affect targets within this enclosing tag (regex; use single quotes!)"
  echo "                                attr:  matches only attributes on this specific tag: <thismatches attr=..."
  echo "                                value: matches only values if *this* is a descendant of tag: <thismatches>[...]<val>2</val>..."
  echo "    --within-additional <regex> | --wa <regex>"
  echo "                                This is an addon to -w and specifies that the opening tag line must match an additional regex."
  echo "                                -w 'type' --wr 'attr.=\"1\"' will match all \"type\" tags that also have some attribute called \"attr\" set to 1."
  echo "  --verbose      | -v         Print detailed information about what's being done"
  echo "  --progress                  Print progress updates (default false, can't be used with -v)"
  echo "  help                        Show this help message"
  echo ""
  echo "Examples:"
  echo "  $0 value add 1.5 --file zones.xml --within zone radius"
  echo "  $0 attr multiply 2 --file zones.xml smin smax dmin dmax"
  echo "  $0 attr divide 3 --file zones.xml --int --min 1 --max 10 count"
  echo "  $0 attr multiply 1.1 --file zones.xml --regex -w zoneA '.*min'"
  echo "  $0 attr format --file zones.xml"
  echo "  cat zones.xml | $0 value subtract 2 depth"
}